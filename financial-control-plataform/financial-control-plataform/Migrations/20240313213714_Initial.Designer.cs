// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using financial_control_plataform.Contexts;

#nullable disable

namespace financial_control_plataform.Migrations
{
    [DbContext(typeof(FinancialControlContext))]
    [Migration("20240313213714_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("financial_control_plataform.Entities.ExpensesIncomeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("Excluded")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("excluded");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("name");

                    b.Property<int>("Operation")
                        .HasColumnType("integer")
                        .HasColumnName("operation");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated");

                    b.HasKey("Id")
                        .HasName("pk_expenses_income_types");

                    b.ToTable("expenses_income_types", (string)null);
                });

            modelBuilder.Entity("financial_control_plataform.Entities.Instituitions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("Excluded")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("excluded");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("name");

                    b.Property<int>("TypeInstitution")
                        .HasColumnType("integer")
                        .HasColumnName("type_institution");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_institutions");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("ix_institutions_user_id");

                    b.ToTable("institutions", (string)null);
                });

            modelBuilder.Entity("financial_control_plataform.Entities.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("contact_number");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("Excluded")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("excluded");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("last_name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("financial_control_plataform.Entities.UsersInstituitions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<DateTime?>("Excluded")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("excluded");

                    b.Property<Guid>("InstituitionId")
                        .HasColumnType("uuid")
                        .HasColumnName("instituition_id");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_users_institutions");

                    b.HasIndex("InstituitionId")
                        .HasDatabaseName("ix_users_institutions_instituition_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_users_institutions_user_id");

                    b.ToTable("users_institutions", (string)null);
                });

            modelBuilder.Entity("financial_control_platform.Entities.ExpensesIncome", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("Excluded")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("excluded");

                    b.Property<Guid>("ExpenseIncomeTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("expense_income_type_id");

                    b.Property<bool>("Fixed")
                        .HasColumnType("boolean")
                        .HasColumnName("fixed");

                    b.Property<int?>("Frequency")
                        .HasColumnType("integer")
                        .HasColumnName("frequency");

                    b.Property<Guid>("InstituitionId")
                        .HasColumnType("uuid")
                        .HasColumnName("instituition_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("name");

                    b.Property<bool>("Settled")
                        .HasColumnType("boolean")
                        .HasColumnName("settled");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated");

                    b.Property<float>("Value")
                        .HasColumnType("real")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_expenses_income");

                    b.HasIndex("ExpenseIncomeTypeId")
                        .HasDatabaseName("ix_expenses_income_expense_income_type_id");

                    b.HasIndex("InstituitionId")
                        .HasDatabaseName("ix_expenses_income_instituition_id");

                    b.ToTable("expenses_income", (string)null);
                });

            modelBuilder.Entity("financial_control_plataform.Entities.Instituitions", b =>
                {
                    b.HasOne("financial_control_plataform.Entities.Users", "Users")
                        .WithOne("Instituitions")
                        .HasForeignKey("financial_control_plataform.Entities.Instituitions", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_institutions_users_user_id");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("financial_control_plataform.Entities.UsersInstituitions", b =>
                {
                    b.HasOne("financial_control_plataform.Entities.Instituitions", "Instituition")
                        .WithMany()
                        .HasForeignKey("InstituitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_users_institutions_institutions_instituition_id");

                    b.HasOne("financial_control_plataform.Entities.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_users_institutions_users_user_id");

                    b.Navigation("Instituition");

                    b.Navigation("User");
                });

            modelBuilder.Entity("financial_control_platform.Entities.ExpensesIncome", b =>
                {
                    b.HasOne("financial_control_plataform.Entities.ExpensesIncomeType", "ExpenseIncomeType")
                        .WithMany()
                        .HasForeignKey("ExpenseIncomeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_expenses_income_expenses_income_types_expense_income_type_id");

                    b.HasOne("financial_control_plataform.Entities.Instituitions", "Instituition")
                        .WithMany()
                        .HasForeignKey("InstituitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_expenses_income_institutions_instituition_id");

                    b.Navigation("ExpenseIncomeType");

                    b.Navigation("Instituition");
                });

            modelBuilder.Entity("financial_control_plataform.Entities.Users", b =>
                {
                    b.Navigation("Instituitions")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
